/**
* //TODO: Handle height properly once understood whether to use kup-box or not
* @prop --kup-familytree-item-background-color: Sets the background color of the items.
* @prop --kup-familytree-item-color: Sets the color of the items.
* @prop --kup-familytree-item-height: Sets the height of the items.
* @prop --kup-familytree-item-h-padding: Sets the horizontal padding of items.
* @prop --kup-familytree-item-v-padding: Sets the vertical padding of items.
* @prop --kup-familytree-item-width: Sets the width of the items.
* @prop --kup-familytree-lines-color: Sets the color of the lines.
*/

:host {
  --kup_familytree_item_background_color: var(
    --kup-familytree-item-background-color,
    var(--kup-primary-color)
  );
  --kup_familytree_item_color: var(
    --kup-familytree-item-color,
    var(--kup-text-on-primary-color)
  );
  --kup_familytree_item_height: var(--kup-familytree-item-height, 40px);
  --kup_familytree_item_h_padding: var(--kup-familytree-item-h-padding, 8px);
  --kup_familytree_item_v_padding: var(--kup-familytree-item-v-padding, 10px);
  --kup_familytree_item_width: var(--kup-familytree-item-width, 120px);
  --kup_familytree_lines_color: var(
    --kup-familytree-lines-color,
    var(--kup-border-color)
  );

  display: block;
  overflow: hidden;
}

.family-tree {
  display: flex;
  transform: scale(var(--kup_familytree_scale, 1));
  transform-origin: 0px 0px;

  &__node {
    border-collapse: collapse;
    margin: auto;

    &__staff {
      align-items: center;
      display: flex;
      flex-direction: column;
      height: 0;
      transform: translateX(
          calc(
            (
                var(--kup_familytree_item_width) +
                  (var(--kup_familytree_item_h_padding) * 2)
              ) / 2
          )
        )
        translateY(
          calc(
            0px -
              (
                var(--kup_familytree_staffchildren) *
                  var(--kup_familytree_item_height) +
                  var(--kup_familytree_staffchildren) *
                  var(--kup_familytree_item_v_padding)
              )
          )
        );

      &__item {
        padding: var(--kup_familytree_item_v_padding);
        text-align: left;

        &:before {
          border-top: 2px solid var(--kup_familytree_lines_color);
          content: '';
          position: absolute;
          transform: translateX(calc(100% + 2px))
            translateY(calc(var(--kup_familytree_item_height) / 2));
          width: var(--kup_familytree_item_h_padding);
        }
      }
    }

    td {
      vertical-align: top;
      padding: 0;
    }
  }

  &__line {
    &--left {
      border-left: 2px solid var(--kup_familytree_lines_color);
    }

    &--placeholder {
      height: calc(var(--kup_familytree_item_height) / 2);
    }

    &--staff {
      height: calc(
        var(--kup_familytree_staffchildren) * var(--kup_familytree_item_height) +
          var(--kup_familytree_staffchildren) *
          var(--kup_familytree_item_v_padding)
      );
    }

    &--right {
      border-right: 2px solid var(--kup_familytree_lines_color);
    }

    &--top {
      border-top: 2px solid var(--kup_familytree_lines_color);
    }

    &--vertical {
      background-color: var(--kup_familytree_lines_color);
      margin-left: auto;
      margin-right: auto;
      width: 2px;
    }
  }

  &__item {
    display: flex;

    &__wrapper {
      margin: auto;

      kup-box {
        margin: 0 auto;
        overflow: hidden;
        padding: 0 18px;
        width: var(--kup_familytree_item_width);
        z-index: 1;
      }

      .f-button {
        width: fit-content;
        margin-left: auto;
        margin-right: auto;
      }
    }
  }
}
